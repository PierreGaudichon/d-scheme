// Generated by CoffeeScript 1.8.0
(function() {
  var Expression, Molecule,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Expression = require("./Expression").Expression;

  module.exports.Molecule = Molecule = (function(_super) {
    __extends(Molecule, _super);

    Molecule.prototype.list = [];

    function Molecule(list) {
      this.list = list;
    }

    Molecule.prototype.resolve = function(P) {
      var first, last;
      first = this.list.shift().resolve(P);
      last = this.list;
      if (first instanceof Function) {
        return first.evaluate(last, P);
      } else {
        return P.errors.send("Try to evaluate a non function value.");
      }
    };

    Molecule.prototype.evaluate = function(args, P) {
      return this;
    };

    Molecule.prototype.toString = function() {
      var e;
      return "(" + (((function() {
        var _i, _len, _ref, _results;
        _ref = this.list;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          e = _ref[_i];
          _results.push(e.toString());
        }
        return _results;
      }).call(this)).join(" ")) + ")";
    };

    return Molecule;

  })(Expression);

}).call(this);
