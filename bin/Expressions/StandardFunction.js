// Generated by CoffeeScript 1.8.0
(function() {
  var Function, StandardFunction, Type,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Function = require("./Function").Function;

  Type = require("./../Type").Type;

  module.exports.StandardFunction = StandardFunction = (function(_super) {
    __extends(StandardFunction, _super);

    StandardFunction.prototype.parameters = [];

    StandardFunction.prototype["return"] = "";

    StandardFunction.prototype.fun = function() {};

    function StandardFunction(d) {
      this.parameters = d.parameters;
      this["return"] = d["return"];
      this.fun = d.fun;
    }

    StandardFunction.prototype.evaluate = function(args, P) {
      return Type[this["return"]](this.fun(args, P));
    };

    return StandardFunction;

  })(Function);

}).call(this);
