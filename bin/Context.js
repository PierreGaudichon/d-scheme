// Generated by CoffeeScript 1.8.0
(function() {
  var Context, Type;

  Type = require("./Type").Type;

  module.exports.Context = Context = (function() {
    Context.prototype.std = {};

    Context.prototype.globals = {};

    Context.prototype.stack = [];

    function Context() {
      this.std = {};
      this.globals = {};
      this.stack = [];
    }

    Context.prototype.addStd = function(d, P) {
      if (this.std[d.name] != null) {
        return P.errors.send("Cant add " + d.name + " the std, already exists.");
      } else {
        return this.std[name] = Type.fromStd(d);
      }
    };

    Context.prototype.define = function(name, exp) {
      if (this.globals[name] != null) {
        P.errors.tell("" + name + " in globals will be overwriten.");
      }
      return this.globals[name] = exp;
    };

    Context.prototype.push = function(a) {
      return this.stack.unshift(a);
    };

    Context.prototype.pop = function() {
      return this.stack.shift();
    };

    Context.prototype.getOne = function(name, P) {
      var a, _i, _len, _ref;
      _ref = this.stack;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        a = _ref[_i];
        if (a[name] != null) {
          return a[name];
        }
      }
      if (this.globals[name] != null) {
        return this.globals[name];
      }
      if (this.std[name] != null) {
        return this.std[name];
      }
      return P.errors.send("" + name + " not find in all declared variables.");
    };

    return Context;

  })();

}).call(this);
